@import url("https://fonts.googleapis.com/css?family=Lobster");
header {
  width: 100%;
  height: auto;
  background-color: rgba(180, 100, 20, 0.5);
}
header nav {
  padding: 10px;
}
header nav:after {
  content: '';
  display: table;
}
header nav:after {
  clear: both;
}
header nav .title {
  float: left;
  color: #D14348;
  margin: 0 20px;
  font-family: 'Lobster', cursive;
  font-size: 40px;
}
header nav .title h1 {
  margin: 0;
}
header nav .list {
  float: left;
  padding-left: 10px;
}
header nav .list li {
  display: inline-block;
}
header nav .list li a {
  display: block;
  padding: 10px;
  margin-left: 3px;
  background-color: #D14348;
  color: #EEE8D6;
  text-align: center;
  text-decoration: none;
  transition: background-color 0.3s, color 1s ease-out;
}
header nav .list li a:hover {
  background-color: #F39856;
  color: #022933;
}
header nav .list li .active {
  background-color: #0076A3;
  color: #FFBA00;
  cursor: default;
}
header nav .list li .active:hover {
  background-color: #0076A3;
  color: #FFBA00;
}

@media screen and (max-width: 600px) {
  header {
    width: 100%;
    height: auto;
    background-color: rgba(0, 0, 0, 0);
  }
  header nav {
    padding: 0;
  }
  header nav .title {
    width: 100%;
    margin: 0;
    text-align: center;
  }
  header nav .list {
    display: none;
    width: 100%;
    margin-top: 0;
    padding: 0;
  }
  header nav .list li {
    display: block;
    width: 100%;
    margin: 0;
    padding: 0;
  }
  header nav .list li:nth-child(1) a {
    margin: 0;
  }
  header nav .list li:last-child a {
    margin: 0;
  }
  header nav .list li a {
    width: 100%;
    margin: 3px 0;
  }
  header nav .menu_btn {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    padding-top: 3px;
    width: 35px;
    height: 35px;
    margin: 8px;
    background-color: rgba(180, 100, 20, 0.5);
  }
  header nav .menu_btn span {
    content: '';
    display: block;
    margin: 5px auto;
    width: 80%;
    height: 3px;
    background-color: #D14348;
  }
  header nav .menu_btn:hover {
    background-color: #D14348;
    cursor: pointer;
  }
  header nav .menu_btn:hover span {
    background-color: #F39856;
  }

  .list_on {
    display: block;
  }

  .list_off {
    display: none;
  }
}
* {
  box-sizing: border-box;
}

html, body {
  margin: 0;
  padding: 0;
}



/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
