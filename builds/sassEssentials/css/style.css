@import url("https://fonts.googleapis.com/css?family=Lobster");
header {
  width: 100%;
  height: auto;
  background-color: rgba(180, 100, 20, 0.5);
}
header nav {
  padding: 10px;
}
header nav:after {
  content: '';
  display: table;
}
header nav:after {
  clear: both;
}
header nav .title {
  float: left;
  color: #D14348;
  margin: 0 20px;
  font-family: 'Lobster', cursive;
  font-size: 40px;
}
header nav .title h1 {
  margin: 0;
}
header nav .list {
  float: left;
  padding-left: 10px;
}
header nav .list li {
  display: inline-block;
}
header nav .list li a {
  display: block;
  padding: 10px;
  margin-left: 3px;
  background-color: #D14348;
  color: #EEE8D6;
  text-align: center;
  text-decoration: none;
  transition: background-color 0.3s, color 1s ease-out;
}
header nav .list li a:hover {
  background-color: #F39856;
  color: #022933;
}
header nav .list li .active {
  background-color: #0076A3;
  color: #FFBA00;
  cursor: default;
}
header nav .list li .active:hover {
  background-color: #0076A3;
  color: #FFBA00;
}

@media screen and (max-width: 600px) {
  header {
    width: 100%;
    height: auto;
    background-color: #EEE8D6;
  }
  header nav {
    padding: 0;
  }
  header nav .title {
    width: 100%;
    margin: 0;
    text-align: center;
  }
  header nav .list {
    display: none;
    width: 100%;
    margin-top: 0;
    padding: 0;
  }
  header nav .list li {
    display: block;
    width: 100%;
    margin: 0;
    padding: 0;
  }
  header nav .list li:nth-child(1) a {
    margin: 0;
  }
  header nav .list li:last-child a {
    margin: 0;
  }
  header nav .list li a {
    width: 100%;
    margin: 3px 0;
  }
  header nav .menu_btn {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    padding-top: 3px;
    width: 35px;
    height: 35px;
    margin: 8px;
    background-color: rgba(180, 100, 20, 0.5);
  }
  header nav .menu_btn span {
    content: '';
    display: block;
    margin: 5px auto;
    width: 80%;
    height: 3px;
    background-color: #D14348;
  }
  header nav .menu_btn:hover {
    background-color: #D14348;
    cursor: pointer;
  }
  header nav .menu_btn:hover span {
    background-color: #F39856;
  }
  header nav .menu_btn:hover:active {
    background-color: #022933;
    cursor: pointer;
  }
  header nav .menu_btn:hover:active span {
    background-color: #EEE8D6;
  }
  header nav .list_on {
    display: block;
  }
  header nav .list_off {
    display: none;
  }
}
#body_page {
  display: block;
  width: 100%;
  margin: 0;
  padding: 0;
  background-color: #EEE8D6;
}
#body_page .container_items {
  padding: 10px;
}
#body_page .container_items:after {
  content: '';
  display: table;
}
#body_page .container_items:after {
  clear: both;
}
#body_page .container_items .item {
  float: left;
  margin: 0;
  width: 49.5%;
}
#body_page .container_items .item:nth-child(n) {
  margin-right: 1%;
  margin-top: 1%;
}
#body_page .container_items .item:nth-child(2n) {
  margin-right: 0;
  margin-bottom: 0;
}
#body_page .container_items .item p {
  display: block;
  max-width: 100%;
  background-color: rgba(180, 100, 20, 0.5);
  color: #022933;
  border: 1px solid black;
  padding: 20px;
  margin: 0;
  border-radius: 12px;
  -webkit-border-radius: 12px;
  text-align: justify;
}

@media screen and (max-width: 600px) {
  #body_page .container_items .item {
    width: 100%;
  }
  #body_page .container_items .item:nth-child(n) {
    margin-right: 1%;
    margin-top: 1%;
  }
  #body_page .container_items .item:nth-child(1n) {
    margin-right: 0;
    margin-bottom: 0;
  }
  #body_page .container_items .item p {
    background-color: #EEE8D6;
    color: #022933;
  }
}
* {
  box-sizing: border-box;
}

html, body {
  margin: 0;
  padding: 0;
}



/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
