@import url("https://fonts.googleapis.com/css?family=Lobster");
header {
  width: 100%;
  height: auto;
  background-color: rgba(180, 100, 20, 0.5);
}
header nav {
  padding: 10px;
}
header nav:after {
  content: '';
  display: table;
}
header nav:after {
  clear: both;
}
header nav .title {
  float: left;
  color: #D14348;
  margin: 0 20px;
  font-family: 'Lobster', cursive;
  font-size: 40px;
}
header nav .title h1 {
  margin: 0;
}
header nav .list {
  float: left;
  padding-left: 10px;
}
header nav .list li {
  display: inline-block;
}
header nav .list li a {
  display: block;
  padding: 10px;
  margin-left: 3px;
  background-color: #D14348;
  color: #EEE8D6;
  text-align: center;
  text-decoration: none;
  transition: background-color 0.3s, color 1s ease-out;
}
header nav .list li a:hover {
  background-color: #F39856;
  color: #022933;
}
header nav .list li .active {
  background-color: #0076A3;
  color: #FFBA00;
  cursor: default;
}
header nav .list li .active:hover {
  background-color: #0076A3;
  color: #FFBA00;
}

@media screen and (max-width: 600px) {
  header {
    width: 100%;
    height: auto;
    background-color: #EEE8D6;
  }
  header nav {
    padding: 0;
  }
  header nav .title {
    width: 100%;
    margin: 0;
    text-align: center;
  }
  header nav .list {
    display: none;
    width: 100%;
    margin-top: 0;
    padding: 0;
  }
  header nav .list li {
    display: block;
    width: 100%;
    margin: 0;
    padding: 0;
  }
  header nav .list li:nth-child(1) a {
    margin: 0;
  }
  header nav .list li:last-child a {
    margin: 0;
  }
  header nav .list li a {
    width: 100%;
    margin: 3px 0;
  }
  header nav .menu_btn {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    padding-top: 3px;
    width: 35px;
    height: 35px;
    margin: 8px;
    background-color: rgba(180, 100, 20, 0.5);
  }
  header nav .menu_btn span {
    content: '';
    display: block;
    margin: 5px auto;
    width: 80%;
    height: 3px;
    background-color: #D14348;
  }
  header nav .menu_btn:hover {
    background-color: #D14348;
    cursor: pointer;
  }
  header nav .menu_btn:hover span {
    background-color: #F39856;
  }
  header nav .menu_btn:hover:active {
    background-color: #022933;
    cursor: pointer;
  }
  header nav .menu_btn:hover:active span {
    background-color: #EEE8D6;
  }
  header nav .list_on {
    display: block;
  }
  header nav .list_off {
    display: none;
  }
}
#body_page {
  display: block;
  width: 100%;
  margin: 0;
  padding: 0;
  background-color: #EEE8D6;
}
#body_page .container_items {
  padding: 10px;
}
#body_page .container_items:after {
  content: '';
  display: table;
}
#body_page .container_items:after {
  clear: both;
}
#body_page .container_items .item {
  float: left;
  margin: 0;
  width: 49.5%;
}
#body_page .container_items .item:nth-child(n) {
  margin-right: 1%;
  margin-top: 1%;
}
#body_page .container_items .item:nth-child(2n) {
  margin-right: 0;
  margin-bottom: 0;
}
#body_page .container_items .item p {
  display: block;
  max-width: 100%;
  background-color: rgba(180, 100, 20, 0.5);
  color: #022933;
  border: 1px solid #022933;
  padding: 20px;
  margin: 0;
  border-radius: 12px;
  -webkit-border-radius: 12px;
  text-align: justify;
}

@media screen and (max-width: 600px) {
  #body_page .container_items .item {
    width: 100%;
  }
  #body_page .container_items .item:nth-child(n) {
    margin-right: 1%;
    margin-top: 1%;
  }
  #body_page .container_items .item:nth-child(1n) {
    margin-right: 0;
    margin-bottom: 0;
  }
  #body_page .container_items .item p {
    background-color: #EEE8D6;
    color: #022933;
  }
}
* {
  box-sizing: border-box;
}

html, body {
  margin: 0;
  padding: 0;
}



/*# sourceMappingURL=data:application/json;charset=utf8;base64,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SUFDckIsWUFBWSxFQUFDLENBQUM7SUFDZCxhQUFhLEVBQUUsQ0FBQzs7RUNPZCxtQ0FBQztJQUNDLGdCQUFnQixFSFFzQixPQUFTO0lHUC9DLEtBQUssRUhRaUMsT0FBUzs7O0FJaER6RCxDQUFDO0VBQ0MsVUFBVSxFQUFFLFVBQVU7OztBQUd4QixVQUFTO0VBQ1AsTUFBTSxFQUFDLENBQUM7RUFDUixPQUFPLEVBQUMsQ0FBQyIsInNvdXJjZXMiOlsiX3ZhcmlhYmxlcy5zY3NzIiwiX2hlYWRlci5zY3NzIiwiX21peGlucy5zY3NzIiwiX2JvZHlfcGFnZS5zY3NzIiwibWFpbi5zY3NzIl0sIm5hbWVzIjpbXSwiZmlsZSI6InN0eWxlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy9zZXR0aW5nc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vZm9udHNcblxuICAvL2ZvbnQtZmFtaWx5OiAnTG9ic3RlcicsIGN1cnNpdmU7XG4gIEBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9TG9ic3RlcicpO1xuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2NvbG9yc1xuXG4gIC8vY29sb3IgdmFyaWFibGVzXG4gICRvZmZ3aGl0ZTogICAgI0VFRThENjtcbiAgJGRhcmtibHVlOiAgICAjMDIyOTMzO1xuICAkeWVsbG93OiAgICAgICNGRkJBMDA7XG4gICRibHVlOiAgICAgICAgIzAwNzZBMztcbiAgJGdyZWVuOiAgICAgICAjNTQ4QzI3O1xuICAkb3JhbmdlOiAgICAgICNGMzk4NTY7XG4gICRyZWQ6ICAgICAgICAgI0QxNDM0ODtcbiAgJHB1cnBsZTogICAgICAjNkQ3M0MyO1xuXG4gIC8vc2l6ZVxuICAkc21hbGxfc2NyZWVuX3NpemU6IDYwMHB4O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAvL3BhZ2UgY29sb3JzIHNldHRpbmdzXG5cbiAgLy9oZWFkZXJfc2V0dGluZ3NcbiAgJG5hdl9ia2dyb3VuZDogICAgICAgICAgICAgICAgICAgIHJnYmEoMTgwLDEwMCwyMCwuNSk7XG4gICR0cmFuc3BhcmVudCA6ICAgICAgICAgICAgICAgICAgICByZ2JhKDAsMCwwLDApO1xuICAvL3RpdGxlLXNldHRpbmdzXG4gICR0aXRsZV90ZXh0X2NvbG9yOiAgICAgICAgICAgICAgICAkcmVkO1xuXG4gIC8vbWVudV9zZXR0aW5nc1xuICAkbWVudV90ZXh0X2NvbG9yOiAgICAgICAgICAgICAgICAgJG9mZndoaXRlO1xuICAkbWVudV9iYWNrZ3JvdW5kX2NvbG9yOiAgICAgICAgICAgJHJlZDtcbiAgJG1lbnVfaG92ZXJfY29sb3I6ICAgICAgICAgICAgICAgICRvcmFuZ2U7XG4gICRtZW51X2hvdmVyX3RleHRfY29sb3I6ICAgICAgICAgICAkZGFya2JsdWU7XG4gICRtZW51X2FjdGl2ZV9jb2xvcjogICAgICAgICAgICAgICAkYmx1ZTtcbiAgJG1lbnVfYWN0aXZlX3RleHRfY29sb3I6ICAgICAgICAgICR5ZWxsb3c7XG5cbiAgLy9ib2R5X3BhZ2UgY29sb3Igc2V0dGluZ3NcblxuICAkYm9keV9wYWdlX2JhY2tncm91bmRfY29sb3I6ICAgICAgJG9mZndoaXRlO1xuICAkYm9keV9wYWdlX3BfYmFja2dyb3VuZF9jb2xvcjogICAgJG5hdl9ia2dyb3VuZDtcbiAgJGJvZHlfcGFnZV9wX3RleHRfY29sb3I6ICAgICAgICAgICRkYXJrYmx1ZTtcbiAgJGJvZHlfcGFnZV9wX2JvcmRlcl9jb2xvcjogICAgICAgICRkYXJrYmx1ZTtcbiAgICAgICAgLy82MDBweCBzY3JlZW5cbiAgICAgICAgJGJvZHlfcGFnZV9wX21lZGlhX2JhY2tncm91bmRfY29sb3I6ICAgICRvZmZ3aGl0ZTtcbiAgICAgICAgJGJvZHlfcGFnZV9wX21lZGlhX2NvbG9yOiAgICAgICAgICAgICAgICRkYXJrYmx1ZTtcbiIsIlxuaGVhZGVye1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OmF1dG87XG4gIGJhY2tncm91bmQtY29sb3I6ICRuYXZfYmtncm91bmQ7XG4gIG5hdntcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIEBpbmNsdWRlIGNsZWFyZml4O1xuICAgIC50aXRsZXtcbiAgICAgIGZsb2F0OmxlZnQ7XG4gICAgICBjb2xvcjokdGl0bGVfdGV4dF9jb2xvcjtcbiAgICAgIG1hcmdpbjowIDIwcHg7XG4gICAgICBmb250LWZhbWlseTonTG9ic3RlcicsIGN1cnNpdmU7XG4gICAgICBmb250LXNpemU6IDQwcHg7XG5cbiAgICAgIGgxe1xuICAgICAgICBtYXJnaW46MDtcbiAgICAgIH1cbiAgICB9XG4gICAgLmxpc3R7XG5cbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgICAgbGl7XG4gICAgICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xuICAgICAgICBhe1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIHBhZGRpbmc6MTBweDtcbiAgICAgICAgICBtYXJnaW4tbGVmdDogM3B4O1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6JG1lbnVfYmFja2dyb3VuZF9jb2xvcjtcbiAgICAgICAgICBjb2xvcjokbWVudV90ZXh0X2NvbG9yO1xuICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAuM3MsIGNvbG9yIDFzIGVhc2Utb3V0IDtcbiAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtZW51X2hvdmVyX2NvbG9yO1xuICAgICAgICAgICAgY29sb3I6ICRtZW51X2hvdmVyX3RleHRfY29sb3I7XG4gICAgICAgICAgfVxuICAgICAgICB9Ly9hIGxpbmtzXG4gICAgICAgIC5hY3RpdmV7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1lbnVfYWN0aXZlX2NvbG9yO1xuICAgICAgICAgIGNvbG9yOiRtZW51X2FjdGl2ZV90ZXh0X2NvbG9yO1xuICAgICAgICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICAgICAgICAmOmhvdmVye1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1lbnVfYWN0aXZlX2NvbG9yO1xuICAgICAgICAgICAgY29sb3I6JG1lbnVfYWN0aXZlX3RleHRfY29sb3I7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9Ly9saVxuICAgIH0vL3VsXG4gIH0vL25hdlxufS8vaGVhZGVyXG5cblxuXG5cbi8vZm9yIGRldmljZXMgNjAwcHhcblxuXG5AaW5jbHVkZSBicmVhaygkc21hbGxfc2NyZWVuX3NpemUpe1xuICAgIGhlYWRlcntcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OmF1dG87XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiRvZmZ3aGl0ZTtcbiAgICAgIG5hdntcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgLnRpdGxle1xuICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAvLyAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIH0vL1RpdGxlXG4gICAgICAgIC5saXN0e1xuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAvLyAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgbGl7XG4gICAgICAgICAgICAmOm50aC1jaGlsZCgxKXtcbiAgICAgICAgICAgICAgYXtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0vL2NoaWxkIGZpcnN0XG4gICAgICAgICAgICAgICY6bGFzdC1jaGlsZHtcbiAgICAgICAgICAgICAgICBhe1xuICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0vL2xhc3QgY2hpbGRcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICBwYWRkaW5nOjA7XG5cbiAgICAgICAgICAgIGF7XG4gICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICAgIG1hcmdpbjozcHggMDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgIH0vLyBsaSA2MDBweFxuICAgICAgICB9Ly91bCBsaXN0XG4gICAgICAgIC5tZW51X2J0bntcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgIGxlZnQ6MDtcbiAgICAgICAgICBwYWRkaW5nLXRvcDogM3B4O1xuICAgICAgICAgIHdpZHRoOjM1cHg7XG4gICAgICAgICAgaGVpZ2h0OjM1cHg7XG4gICAgICAgICAgbWFyZ2luOjhweDtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbmF2X2JrZ3JvdW5kO1xuXG4gICAgICAgICAgc3BhbntcbiAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBtYXJnaW46NXB4IGF1dG87XG4gICAgICAgICAgICB3aWR0aDo4MCU7XG4gICAgICAgICAgICBoZWlnaHQ6M3B4O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHJlZDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAmOmhvdmVye1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHJlZDtcbiAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgIHNwYW57XG4gICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRvcmFuZ2U7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAmOmFjdGl2ZXtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRkYXJrYmx1ZTtcbiAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgIHNwYW57XG4gICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRvZmZ3aGl0ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH1cbiAgICAgICAgICB9Ly9idG4tbWVudS0gaG92ZXJcblxuICAgICAgICB9XG4gICAgICAgICAgLmxpc3Rfb257XG4gICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgIH1cbiAgICAgICAgICAubGlzdF9vZmZ7XG4gICAgICAgICAgICBkaXNwbGF5Om5vbmU7XG4gICAgICAgICAgfVxuICAgICAgfS8vbmF2IGJyZWFrIDYwMHB4XG4gICAgfSAvL2hlYWRlciA2MDBweFxufS8vYnJlYWtcbiIsIkBtaXhpbiBjbGVhcmZpeHtcbiAgJjphZnRlcntcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgfVxuICAmOmFmdGVyIHtcbiAgICBjbGVhcjpib3RoO1xuICB9XG59XG5cblxuQG1peGluIHJhZGl1cygkc2l6ZSl7XG4gIGJvcmRlci1yYWRpdXM6ICRzaXplO1xuICAtd2Via2l0LWJvcmRlci1yYWRpdXM6ICRzaXplO1xufVxuXG5AbWl4aW4gYnJlYWsoJHdpZHRoKXtcbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJHdpZHRoKXtcbiAgICBAY29udGVudDtcbiAgfVxuXG59XG5cbkBtaXhpbiBncmlkKCRjZWxscywkbWFyZ2luKXtcbiAgICB3aWR0aDogKCgxMDAlIC0gKCRjZWxscyAtIDEpKiAkbWFyZ2luKS8kY2VsbHMpO1xuICAgICY6bnRoLWNoaWxkKG4pe1xuICAgICAgbWFyZ2luLXJpZ2h0OiAkbWFyZ2luO1xuICAgICAgbWFyZ2luLXRvcDogJG1hcmdpbjtcbiAgICB9XG4gICAgJjpudGgtY2hpbGQoI3skY2VsbHN9bil7XG4gICAgICBtYXJnaW4tcmlnaHQ6MDtcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgfVxufVxuIiwiXG4jYm9keV9wYWdle1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4vLyAgYm9yZGVyOiAycHggZG90dGVkIHJlZDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOjA7XG4gIGJhY2tncm91bmQtY29sb3I6ICAkYm9keV9wYWdlX2JhY2tncm91bmRfY29sb3I7XG4gIC5jb250YWluZXJfaXRlbXN7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBAaW5jbHVkZSBjbGVhcmZpeDtcbiAgICAuaXRlbXtcbiAgICAgICAgZmxvYXQ6bGVmdDtcbiAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgIEBpbmNsdWRlIGdyaWQoMiwxJSk7XG5cbiAgICAgICAgcHtcbiAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgIG1heC13aWR0aDoxMDAlO1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRib2R5X3BhZ2VfcF9iYWNrZ3JvdW5kX2NvbG9yO1xuICAgICAgICAgIGNvbG9yOiRib2R5X3BhZ2VfcF90ZXh0X2NvbG9yO1xuICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICRib2R5X3BhZ2VfcF9ib3JkZXJfY29sb3I7XG4gICAgICAgICAgcGFkZGluZzoyMHB4O1xuICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgIEBpbmNsdWRlIHJhZGl1cygxMnB4KTtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xuXG4gICAgICAgIH1cblxuICAgICAgfVxuICAgIH1cbn1cblxuQGluY2x1ZGUgYnJlYWsoJHNtYWxsX3NjcmVlbl9zaXplKXtcbiAgI2JvZHlfcGFnZXtcbiAgICAuY29udGFpbmVyX2l0ZW1ze1xuICAgICAgLml0ZW17XG4gICAgICAgIEBpbmNsdWRlIGdyaWQoMSwxJSk7XG4gICAgICAgIHB7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJvZHlfcGFnZV9wX21lZGlhX2JhY2tncm91bmRfY29sb3I7XG4gICAgICAgICAgY29sb3I6JGJvZHlfcGFnZV9wX21lZGlhX2NvbG9yO1xuICAgICAgICB9XG5cbiAgICAgIH1cbiAgICB9XG4gIH1cblxufVxuIiwiKntcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuaHRtbCxib2R5e1xuICBtYXJnaW46MDtcbiAgcGFkZGluZzowO1xufVxuIl19 */
